name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESSTOKEN }}

      # 3. Docker 이미지 build
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/theroom-frontend:latest ./frontend
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/theroom-backend:latest ./backend
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/theroom-nginx:latest ./nginx

      # 4. Docker 이미지 push
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/theroom-frontend:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/theroom-backend:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/theroom-nginx:latest

      # 5. docker-compose.yml, .env 파일 생성 및 ec2에 복사
      - name: Create docker-compose.yml and .env files
        env: 
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          DOCKER_COMPOSE_YML_BASE64_ENCODE: ${{ secrets.DOCKER_COMPOSE_YML_BASE64_ENCODE }}
          FRONT_ENV: ${{ secrets.FRONT_ENV }}
          BACK_ENV: ${{ secrets.BACK_ENV }}
        run: |
          echo "$SSH_KEY" > private_key.pem
          chmod 600 private_key.pem

          echo "$DOCKER_COMPOSE_YML_BASE64_ENCODE" | base64 -d > docker-compose.yml
          echo "$FRONT_ENV" > front.env
          echo "$BACK_ENV" > back.env

          ssh -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            mkdir -p ~/app
          EOF

          scp -i private_key.pem docker-compose.yml front.env back.env $EC2_USER@$EC2_HOST:~/app/

      # 6. EC2에서 컨테이너 실행
      - name: Deploy on EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            cd ~/app
            docker-compose pull
            docker-compose up -d
          EOF